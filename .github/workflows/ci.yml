name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: Auto Build CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly, beta, stable]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Install Rust toolchain ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain:  ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Install wasm32-unknown-unknown for ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain:  ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          override: true
     
      # Work around https://github.com/actions/cache/issues/403 by using GNU tar
      # instead of BSD tar.
      - name: Install GNU tar
        if: matrix.os == 'macOS-latest'
        run: |
          brew install gnu-tar
          echo PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >> $GITHUB_ENV
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ secrets.CACHE_VERSION }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ secrets.CACHE_VERSION }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ secrets.CACHE_VERSION }}

      - name: Release build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Cargo Test For Lib
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib

      - name: Cargo Test For Doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc 

      - name: Clippy errors
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          # don't use strict mode
          # args: -- -D warnings

      - name: Cargo Fmt Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check